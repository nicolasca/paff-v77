@import "./../../../../colors.scss";

@mixin setColorsFaction($colorName, $colorBg) {
  & > * {
    background-image: url(./../../../../assets/textures/asfalt-dark.png);
  }

  & > .type,
  & > .deploy,
  & > .Regiment,
  & > .Capacites,
  & > .DetailCarac,
  & > .name {
    background-color: $colorBg;
    // background-color: #c97928;
    background-image: url(./../../../../assets/textures/light-paper-fibers.png);
    /* This is mostly intended for prototyping; please download the pattern and re-host for production environments. Thank you! */
    color: white;
  }

  // &>.DetailCarac {
  //   $light:
  //   background-color: filter()

  // }

  // border: 15px solid lighten($colorBg, 15%);
  border: 10px solid darken($colorBg, 10%);

  .Faction {
    color: $colorName;
    background-color: darken($colorBg, 15%);
  }
}

/* Set colors for each faction */

.CardUnit.container.peaux-vertes {
  @include setColorsFaction($peaux-vertes-name-color, $peaux-vertes-bg-color);
}

.CardUnit.container.sephosi {
  @include setColorsFaction($sephosi-bg-name-color, $sephosi-bg-color);
}

.CardUnit.container.gaeli {
  @include setColorsFaction($gaeli-name-color, $gaeli-bg-color);
}

.CardUnit.container.liches {
  @include setColorsFaction($liches-name-color, $liches-bg-color);

  & > .type,
  & > .deploy,
  & > .Regiment,
  & > .Capacites,
  & > .name {
    color: unset;
  }

  .Faction {
    background-color: darken($liches-bg-color, 35%);
  }

  border: 10px solid darken($liches-bg-name-color, 10%);

  svg {
    fill: rgb(74, 74, 74);
  }
}

.CardUnit.container {
  font-family: "Helvetica";
  display: grid;
  grid-template-columns: repeat(10, 1fr);
  grid-template-rows: 10% 10% 55% 10% 10%;
  height: 100%;

  svg {
    height: 25px;
    width: 25px;
    fill: white;
  }
}

.Type {
  background: grey;
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
}

.Cost {
  grid-column: 1 / 3;
  grid-row: 1 / 3;
  background: white;
  color: black;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  border: 1px solid black;
}

.Entity {
  grid-column: 9 / 11;
  grid-row: 1 / 3;
  color: white;
  background: black;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  border: 1px solid black;
  border-left: none;
}

.Faction {
  grid-column: 3 / 9;
  grid-row: 1 / 2;
  display: flex;
  align-items: center;
  justify-content: center;
  font-weight: 600;
  border: 1px solid black;
  border-width: 1px 1px 0 0;
  text-align: center;
  font-family: "Fantasy";
  font-size: 1.5rem;
}

.name {
  grid-column: 3 / 9;
  grid-row: 2 / 3;
  font-size: 0.8rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  border: 1px solid black;
  border-left: 0;
  text-align: center;
}

.DetailCarac {
  color: #4a4a4a;
  background-color: white;
  grid-column: 1 / 11;
  grid-row: 4 / 5;
  display: grid;
  grid-template-columns: 1fr 1fr;
  // grid-template-rows: 1fr 1fr;
  border: 1px solid black;
  display: flex;

  div {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50%;
    padding: 5px;
    font-weight: 600;

    &.Life {
      border-right: 1px solid black;
    }

    &.Attack {
      color: darkred;
    }
  }
}

.Capacities {
  grid-column: 1 / 11;
  display: flex;
  align-items: center;
  justify-content: space-around;
  border: 1px solid black;
  border-top: none;
  background-color: white;
  padding: 10px;
  font-size: 0.8rem;
}

.CapacitiesSmall {
  grid-row: 5 / 6;
}

.CapacitiesLarge {
  grid-row: 4 / 6;
  border-top: 1px solid black;
}

.Capacities span {
  margin: none;
}

.CapacitiesSmall span:hover {
  text-decoration: underline;
}

.Image {
  position: relative;
  grid-column: 1 / 11;
  grid-row: 3 / 4;
  background-position: center;
  background-size: cover;
  border-left: 1px solid black;
  border-right: 1px solid black;

  img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .MaxInDeck {
    position: absolute;
    bottom: 5px;
    right: 5px;
    background: white;
    border: 1px solid black;
    border-radius: 50%;
    padding: 5px;
    display: flex;
    align-content: center;
    justify-content: center;
    width: 30px;
  }
}

/* Tool tip pour la description de l'ordre */
.Tooltip {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: default;
}

.Tooltip::after {
  width: 400px;
  opacity: 0;

  visibility: hidden;
  position: absolute;
  content: attr(data-tooltip);
  text-align: left;
  padding: 6px 10px;
  top: 1.4em;
  left: 80%;
  transform: translateX(-50%) translateY(-2px);
  background: white;
  border: 1px solid grey;
  color: $dark-color;
  /* white-space: nowrap; */
  z-index: 2;
  border-radius: 2px;
  transition: opacity 0.2s cubic-bezier(0.64, 0.09, 0.08, 1),
    transform 0.2s cubic-bezier(0.64, 0.09, 0.08, 1);
}

.Tooltip:hover::after {
  display: block;
  opacity: 1;
  visibility: visible;
  transform: translateX(-50%) translateY(0);
}
